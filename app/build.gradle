import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
//记录build 时间
def currentTime = getDate()
//本地网拍域名
def apiUrl = "http://api.alpha.fytpkk.cn"
//web网拍域名
def webUrl = "https://web.woaiwangpai.com"
//测试网拍域名
def testApi = "http://api.alpha.fytpkk.cn"
//测试web网拍域名
def testWeb = "http://web.fea.woaiwangpai.com"

def getDate() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

def getMyVersionName() {
    int year = Integer.parseInt(new Date().format("yyyy")) - 2019
    return year + "." + new Date().format("MM.dd")
}
//Integer.MAX_VALUE 2147483647  10位
def getMyVersionCode() {
    return Integer.parseInt(new SimpleDateFormat("yyMMddHHmm").format(new Date())) - 1911010000
}

android {
    //配置渠道设置不同的包名、应用名等
    productFlavors {
        android {
            //引用字段动态选择占位符
            manifestPlaceholders = [APP_CHANNEL: "android"]
        }
        web {
            //渠道包配置
            manifestPlaceholders = [APP_CHANNEL: "web"]
            versionName getMyVersionName() + "_web"//3.181015
//            versionCode 1000 //始终低于正式版
        }
    }

    //add 渠道  必须要保证所有的flavor 都属于同一个维度
    flavorDimensions "app"

    compileSdkVersion 29

    defaultConfig {
        multiDexEnabled true
        ndk {
            //设置支持的SO库架构
            /*abiFilters 'arm64-v8a'*/
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64', 'armeabi-v7a','arm64-v8a' //armeabi 市面已弃用
        }

        applicationId "com.woaiwangpai.iwb"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode getMyVersionCode()
        versionName getMyVersionName()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {//签名配置
        release {//release&debug版签名配置
            storeFile file('../woaiwangpai.jks')//密钥文件路径
            storePassword "52wangpai"//密钥文件密码
            keyAlias "wangpai"//key别名
            keyPassword "52wangpai"//key密码
        }
    }
    buildTypes {
        release {
            zipAlignEnabled true
            minifyEnabled false
            signingConfig signingConfigs.release
            buildConfigField("String", "apkBuildTime", "\"${currentTime}\"")
            buildConfigField("String", "apiUrl", "\"${apiUrl}\"")
            buildConfigField("String", "webUrl", "\"${webUrl}\"")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false //开启dex字节码压缩，舍去未使用的jar和class文件
            zipAlignEnabled true //减少应用在运行时的内存消耗
//            shrinkResources true //启用res资源过滤，会将项目中未使用到的图片变成1x1的小图，从而减少体积
//            debuggable true
            signingConfig signingConfigs.release
//            versionNameSuffix "_debug"//添加后缀
            buildConfigField("String", "apkBuildTime", "\"${currentTime}\"")
            buildConfigField("String", "apiUrl", "\"${testApi}\"")
            buildConfigField("String", "webUrl", "\"${testWeb}\"")
        }

        //打包命名
        applicationVariants.all { variant ->
            variant.outputs.all {
                if (buildType.name == 'release') {
                    def fileName = "app" + "_${getDate()}" + ".apk"
                    outputFileName = fileName
                } else {
                    def fileName = "wawp" + "_V${defaultConfig.versionName}" + ".apk"
                    outputFileName = fileName
                }
            }
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }

        //添加如下配置就可以sdk26以下打包sdk28compilesdk了
        lintOptions {
            //build release 版本 时 是否开启lint 检测
            checkReleaseBuilds true
            // Or, if you prefer, 可以继续检查发布版本中的错误，
            //但是即使发现错误也要继续构建： //lint时遇到error时继续构建
            abortOnError false
        }

        compileOptions {
            sourceCompatibility = '1.8'
            targetCompatibility = '1.8'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    repositories {
        flatDir {
            dirs '../app/libs'
        }
    }

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation files('libs\\open_sdk_r8353806_lite.jar')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //优雅地处理加载中，重试，无数据等
    implementation 'com.kingja.loadsir:loadsir:1.3.6'

    //注解
    implementation 'com.jakewharton:butterknife:10.1.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    compileOnly 'androidx.legacy:legacy-support-v4:1.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'

    //Json字符串解析框架导入
    implementation 'com.alibaba:fastjson:1.2.58'
    implementation 'com.google.code.gson:gson:2.8.5'

    //轮播图
    implementation 'com.youth.banner:banner:1.4.10'
    implementation 'com.github.xiaohaibin:XBanner:androidx_v1.0.6'

    //图片加载
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'com.github.bumptech.glide:annotations:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

    // 高斯模糊和圆角等
    implementation 'jp.wasabeef:glide-transformations:4.0.1'

    //图片缩放框架导入
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    //网络请求
    implementation 'com.lzy.net:okgo:3.0.4'
    implementation 'com.lzy.net:okrx2:2.0.2'

    //RX
    implementation 'io.reactivex.rxjava2:rxjava:2.2.11'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    //动态权限
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'

    //MD
    implementation 'com.google.android.material:material:1.0.0'

    //recyclerview导入
    implementation 'androidx.recyclerview:recyclerview:1.0.0'

    //分包
    implementation 'androidx.multidex:multidex:2.0.1'

    //沉浸式状态栏框架导入
    implementation 'com.qmuiteam:qmui:1.4.0'

    //事件传递框架导入
    implementation 'org.greenrobot:eventbus:3.1.1'

    //下拉刷新框架导入
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'

    //没有使用特殊Header，可以不加这行
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0'

    //FlowLayout流布局导入
    implementation 'com.nex3z:flow-layout:1.3.0'


    //RecyclerView的适配器
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.50'

    //图片效果
    implementation 'com.joooonho:selectableroundedimageview:1.0.1'

    //时间 地区选择器
    implementation 'com.contrarywind:Android-PickerView:4.1.8'
//    implementation(name: 'base-2.6.1.301', ext: 'aar')
//    implementation(name: 'push-2.6.1.301', ext: 'aar')

    // MEIZU push sdk
    implementation 'com.meizu.flyme.internet:push-internal:3.6.+@aar'
    implementation files('libs/vivo_pushsdk_v2.3.1.jar')
    implementation files('libs/MiPush_SDK_Client_3_6_12.jar')

    // google firebase
    implementation('com.google.firebase:firebase-core:17.0.0') {
        exclude group: 'androidx.core', module: 'core'
    }

    // google 云消息传递
    implementation('com.google.firebase:firebase-messaging:19.0.1') {
        exclude group: 'androidx.core', module: 'core'
    }

    //闪验包
    implementation(name: 'shanyan_sdk_v2.3.1.5', ext: 'aar')

    //时间选择器
    implementation('cn.qqtheme.framework:WheelPicker:1.4.5') {
        exclude group: 'com.android.support'
    }

    //-------------------------第三方登录、分享、支付----------------------
    //微信登录分享
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:5.5.7'
    //微博分享登录
    implementation 'com.sina.weibo.sdk:core:4.3.6:openDefaultRelease@aar'
    //腾讯im
    implementation project(':tuikit')
    //QQ开放平台
//    implementation files('libs/open_sdk_r6137_lite.jar')
    // 支付宝 SDK AAR 包所需的配置
    implementation(name: 'alipaySdk-15.7.6-20200521195109', ext: 'aar')

    //腾讯地图
    implementation 'com.github.miaotaoii:AndroidLoading:v1.0'
//    implementation files('libs/TencentMapSDK_Raster_v_1.3.4.1.jar')
    implementation 'com.tencent.map.geolocation:TencentLocationSdk-openplatform:7.2.6'

}